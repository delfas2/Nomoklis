# Generated by Django 5.2.6 on 2025-09-22 18:39

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ChatRoom',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('participants', models.ManyToManyField(related_name='chat_rooms', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ChatMessage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField()),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('is_read', models.BooleanField(default=False)),
                ('sender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sent_messages', to=settings.AUTH_USER_MODEL)),
                ('room', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='messages', to='nomoklis_app.chatroom')),
            ],
        ),
        migrations.CreateModel(
            name='Lease',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contract_file', models.FileField(blank=True, null=True, upload_to='contracts/', verbose_name='Sutarties Failas')),
                ('is_signed_by_landlord', models.BooleanField(default=False, verbose_name='Pasirašė nuomotojas')),
                ('is_signed_by_tenant', models.BooleanField(default=False, verbose_name='Pasirašė nuomininkas')),
                ('start_date', models.DateField(verbose_name='Nuomos sutarties pradžios data')),
                ('end_date', models.DateField(blank=True, null=True, verbose_name='Nuomos sutarties pabaigos data')),
                ('deposit_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True, verbose_name='Depozito suma')),
                ('rent_price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Galutinė nuomos kaina (€)')),
                ('status', models.CharField(choices=[('pending', 'Laukiama patvirtinimo'), ('active', 'Aktyvi'), ('rejected', 'Atmesta'), ('terminated', 'Nutraukta')], default='pending', max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('utilities_paid_by', models.CharField(choices=[('tenant', 'Moka pats nuomininkas'), ('landlord', 'Sąskaitas apmoka nuomotojas (įtraukiama į sąskaitą)')], default='tenant', max_length=10, verbose_name='Kas apmoka komunalinius mokesčius?')),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='leases', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Invoice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('invoice_date', models.DateField(auto_now_add=True)),
                ('due_date', models.DateField()),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('invoice_file', models.FileField(blank=True, null=True, upload_to='invoices/')),
                ('is_paid', models.BooleanField(default=False)),
                ('lease', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='invoices', to='nomoklis_app.lease')),
            ],
        ),
        migrations.CreateModel(
            name='MeterReading',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reading_date', models.DateField(auto_now_add=True)),
                ('electricity_reading', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Elektros skaitiklio rodmuo')),
                ('hot_water_reading', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Karšto vandens skaitiklio rodmuo')),
                ('cold_water_reading', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Šalto vandens skaitiklio rodmuo')),
                ('gas_reading', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Dujų skaitiklio rodmuo')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Pastabos')),
                ('lease', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='meter_readings', to='nomoklis_app.lease')),
            ],
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.CharField(max_length=255)),
                ('is_read', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('object_id', models.PositiveIntegerField()),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
                ('recipient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ProblemReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('problem_type', models.CharField(choices=[('santechnika', 'Santechnika'), ('elektra', 'Elektra'), ('buitine_technika', 'Buitinė technika'), ('kita', 'Kita')], max_length=20, verbose_name='Problemos tipas')),
                ('description', models.TextField(verbose_name='Aprašymas')),
                ('status', models.CharField(choices=[('nauja', 'Nauja'), ('vykdoma', 'Vykdoma'), ('isspresta', 'Išspręsta')], default='nauja', max_length=10, verbose_name='Būsena')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('resolution_costs', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True, verbose_name='Išsprendimo išlaidos (€)')),
                ('paid_by', models.CharField(blank=True, choices=[('nuomotojas', 'Nuomotojas'), ('nuomininkas', 'Nuomininkas')], max_length=11, null=True, verbose_name='Kas apmokėjo?')),
                ('lease', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='problems', to='nomoklis_app.lease')),
            ],
        ),
        migrations.CreateModel(
            name='ProblemImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='problems/')),
                ('problem', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='nomoklis_app.problemreport')),
            ],
        ),
        migrations.CreateModel(
            name='ProblemUpdate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.TextField(verbose_name='Komentaras')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('problem', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='updates', to='nomoklis_app.problemreport')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Property',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('property_type', models.CharField(choices=[('butas', 'Butas'), ('namas', 'Namas'), ('kambarys', 'Kambarys bute')], max_length=20)),
                ('status', models.CharField(choices=[('paruostas', 'Paruoštas nuomai'), ('remontas', 'Atliekamas remontas'), ('isnuomotas', 'Išnuomotas'), ('nepasiekiamas', 'Nepasiekiamas')], max_length=20)),
                ('street', models.CharField(max_length=255)),
                ('city', models.CharField(max_length=100)),
                ('district', models.CharField(blank=True, max_length=100, verbose_name='Rajonas')),
                ('area', models.DecimalField(decimal_places=2, max_digits=8)),
                ('rooms', models.PositiveIntegerField(blank=True, null=True)),
                ('floor', models.IntegerField(blank=True, null=True)),
                ('total_floors', models.PositiveIntegerField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('rent_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('deposit', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('is_walkthrough', models.BooleanField(default=False, verbose_name='Ar kambarys pereinamas?')),
                ('has_balcony', models.BooleanField(default=False, verbose_name='Balkonas')),
                ('has_parking', models.BooleanField(default=False, verbose_name='Parkavimo vieta')),
                ('pets_allowed', models.BooleanField(default=False, verbose_name='Leidžiami gyvūnai')),
                ('is_furnished', models.BooleanField(default=False, verbose_name='Su baldais')),
                ('has_appliances', models.BooleanField(default=False, verbose_name='Su buitine technika')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('latitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('longitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='properties', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_type', models.CharField(blank=True, choices=[('nuomininkas', 'Nuomininkas'), ('nuomotojas', 'Nuomotojas')], max_length=12, null=True)),
                ('profile_image', models.ImageField(default='profile_pics/default.jpg', upload_to='profile_pics/', verbose_name='Profilio nuotrauka')),
                ('about_me', models.TextField(blank=True, null=True, verbose_name='Apie mane')),
                ('city', models.CharField(blank=True, max_length=100, null=True, verbose_name='Miestas')),
                ('is_verified', models.BooleanField(default=False, verbose_name='Patvirtintas')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('saved_properties', models.ManyToManyField(blank=True, related_name='saved_by', to='nomoklis_app.property')),
            ],
        ),
        migrations.AddField(
            model_name='lease',
            name='property',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='leases', to='nomoklis_app.property'),
        ),
        migrations.CreateModel(
            name='PropertyImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='properties/')),
                ('property', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='nomoklis_app.property')),
            ],
        ),
        migrations.CreateModel(
            name='PropertyReview',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('property_rating', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)], verbose_name='Būsto įvertinimas (1-10)')),
                ('landlord_rating', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)], verbose_name='Nuomotojo įvertinimas (1-10)')),
                ('property_comment', models.TextField(blank=True, null=True, verbose_name='Komentaras apie būstą')),
                ('landlord_comment', models.TextField(blank=True, null=True, verbose_name='Komentaras apie nuomotoją')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('lease', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='property_review', to='nomoklis_app.lease')),
            ],
        ),
        migrations.CreateModel(
            name='RentalRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('pending', 'Laukiama atsakymo'), ('accepted', 'Priimta'), ('rejected', 'Atmesta')], default='pending', max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('start_date', models.DateField(blank=True, null=True, verbose_name='Norima nuomos pradžia')),
                ('end_date', models.DateField(blank=True, null=True, verbose_name='Norima nuomos pabaiga')),
                ('offered_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Siūloma kaina (€/mėn.)')),
                ('message', models.TextField(blank=True, null=True, verbose_name='Žinutė nuomotojui')),
                ('property', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rental_requests', to='nomoklis_app.property')),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rental_requests', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='TenantReview',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)], verbose_name='Įvertinimas (1-10)')),
                ('comment', models.TextField(blank=True, null=True, verbose_name='Komentaras')),
                ('termination_reason', models.TextField(verbose_name='Nutraukimo priežastis')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('lease', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='review', to='nomoklis_app.lease')),
            ],
        ),
        migrations.CreateModel(
            name='UtilityBill',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=255, verbose_name='Paslaugos pavadinimas')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Suma')),
                ('invoice', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='utility_bills', to='nomoklis_app.invoice')),
            ],
        ),
    ]
